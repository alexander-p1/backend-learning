service: swing-notes-api

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-north-1
  stage: ${opt:stage, 'dev'}
  environment:
    NOTES_TABLE: ${self:service}-notes-${self:provider.stage}
    API_KEY: ${env:API_KEY, 'your-secret-api-key'}
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.NOTES_TABLE}"

functions:
  # Authorizer function
  authorizer:
    handler: src/authorizer.handler
    
  # Notes functions
  getNotes:
    handler: src/handlers/getNotes.handler
    events:
      - http:
          path: api/notes/{username}
          method: get
          authorizer: authorizer
          cors: true
          
  createNote:
    handler: src/handlers/createNote.handler
    events:
      - http:
          path: api/notes/{username}
          method: post
          authorizer: authorizer
          cors: true
          
  updateNote:
    handler: src/handlers/updateNote.handler
    events:
      - http:
          path: api/notes/{id}
          method: put
          authorizer: authorizer
          cors: true
          
  deleteNote:
    handler: src/handlers/deleteNote.handler
    events:
      - http:
          path: api/notes/{id}
          method: delete
          authorizer: authorizer
          cors: true

resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.NOTES_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: username-index
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            BillingMode: PAY_PER_REQUEST
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-offline
